# ------------------------------------------------------------
# SERVER: static hosting per una SPA (React/Vite)
# ------------------------------------------------------------
server {
    listen 80;
    server_name _;

    # Radice dei file generati dal build (Vite/React)
    root /usr/share/nginx/html;
    index index.html;

    # Nasconde versione Nginx nelle pagine/headers
    server_tokens off;

    # --------------------------------------------------------
    # ROUTING SPA
    # - Prova a servire file/dir reali
    # - In caso contrario, cade su index.html (client-side routing)
    # --------------------------------------------------------
    location / {
        try_files $uri $uri/ /index.html;
        # Non cacheare l'HTML: vogliamo che la shell dell'app si aggiorni subito
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # --------------------------------------------------------
    # CACHE ASSET STATICI fingerprintati (js/css/img/font/svg)
    # - 1 anno + immutable: perfetto per file con hash nel nome (Vite)
    # - ETag/Last-Modified aiutano invalidazione e 304
    # --------------------------------------------------------
    location ~* \.(?:js|mjs|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff2?|ttf|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        etag on;
        # (Opzionale) CORS per font, utile se l'app gira su domini/subdomini diversi
        add_header Access-Control-Allow-Origin "*" always;
        try_files $uri =404;
    }

    # --------------------------------------------------------
    # SERVICE WORKER & MANIFEST
    # - Se presenti, cache breve (si aggiornano più spesso dell'HTML)
    # --------------------------------------------------------
    location ~* ^/(?:manifest\.webmanifest|manifest\.json|service-worker\.js)$ {
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        try_files $uri =404;
    }

    # --------------------------------------------------------
    # HEADERS DI SICUREZZA (conservativi per non rompere build moderne)
    # --------------------------------------------------------
    add_header X-Frame-Options "SAMEORIGIN" always;          # evita embedding in iframe di terzi
    add_header X-Content-Type-Options "nosniff" always;      # blocca sniffing MIME
    add_header Referrer-Policy "strict-origin-when-cross-origin" always; # referrer più discreto
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always; # disabilita API non usate

    # ⚠️ Content-Security-Policy può rompere build/tooling (inline, eval, ecc.)
    # Lasciata commentata: personalizzala sul tuo caso specifico e poi abilitala.
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' https:;" always;

    # --------------------------------------------------------
    # COMPRESSIONE (Gzip)
    # - Abilitata per tipi testuali e font (utile sui WOFF2? poco, ma non dannosa)
    # - Se produci asset precompressi (.gz) puoi aggiungere "gzip_static on;"
    # --------------------------------------------------------
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 5;
    gzip_types
        text/plain
        text/css
        text/xml
        application/xml
        application/json
        application/ld+json
        application/javascript
        text/javascript
        application/x-javascript
        application/rss+xml
        application/manifest+json
        font/ttf
        font/otf
        application/font-woff
        application/font-woff2;

    # --------------------------------------------------------
    # MICRO-OTTIMIZZAZIONI I/O (sicure sul solo statico)
    # --------------------------------------------------------
    sendfile on;          # invio kernel-level
    tcp_nopush on;        # ottimizza pacchetti per sendfile
    tcp_nodelay on;

    # (Opzionale) Riduci log accessi se non necessari
    # access_log off;

    # Errori puliti
    error_page 404 /index.html;  # per SPA: 404 lato server -> fallback UI (opzionale se già gestito da location /)
}
